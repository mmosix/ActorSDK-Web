{"version":3,"sources":["../../src/stores/ComposeStore.js"],"names":[],"mappings":"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","file":"ComposeStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport ActorClient from '../utils/ActorClient';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\n\nimport DraftStore from './DraftStore';\n\nfunction parseCommand(text) {\n  const matches = /^\\/(.)?(?: (.+))?/.exec(text);\n  if (!matches) {\n    return null;\n  }\n\n  return {\n    name: matches[1],\n    args: matches[2]\n  };\n}\n\nfunction parseMentionQuery(text, position) {\n  const run = (runText, query) => {\n    if (runText.length === 0) {\n      return null;\n    } else {\n      const lastChar = runText.charAt(runText.length - 1);\n      if (lastChar === '@') {\n        const charBeforeAt = runText.charAt(runText.length - 2);\n        if (charBeforeAt.trim() === '') {\n          const text = (query || '');\n          const atStart = text.length + 1 === position;\n\n          return {\n            text: text,\n            atStart: atStart\n          };\n        } else {\n          return null;\n        }\n      } else if (lastChar.trim() === '') {\n        return null;\n      } else {\n        return run(runText.substring(0, runText.length - 1), lastChar + (query || ''));\n      }\n    }\n  };\n\n  const runText = text.substring(0, position);\n  return run(runText, null);\n}\n\nclass ComposeStore extends ReduceStore {\n  getInitialState() {\n    return {\n      text: '',\n      mentions: null,\n      commands: null,\n      autoFocus: true\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.COMPOSE_TYPING:\n        const nextState = {\n          ...state,\n          text: action.text,\n          commands: null,\n          mentions: null\n        };\n\n        if (action.peer.type === PeerTypes.GROUP) {\n          const query = parseMentionQuery(action.text, action.caretPosition);\n          if (query) {\n            nextState.mentions = ActorClient.findMentions(action.peer.id, query.text);\n          }\n        } else {\n          const command = parseCommand(action.text);\n          if (command) {\n            nextState.commands = ActorClient.findBotCommands(action.peer.id, command.name || '');\n          }\n        }\n\n        return nextState;\n\n      case ActionTypes.COMPOSE_MENTION_INSERT:\n        const query = parseMentionQuery(action.text, action.caretPosition);\n        if (!query) {\n          console.error('Mention not found', { state, action });\n          return state;\n        }\n\n        const mentionEnding = query.atStart ? ': ' : ' ';\n        const textBeforeMention = action.text.substring(0, action.caretPosition - query.text.length - 1);\n        const textAfterMention = action.text.substring(action.caretPosition, action.text.length);\n\n        return {\n          ...state,\n          text: textBeforeMention + action.mention.mentionText + mentionEnding + textAfterMention,\n          mentions: null\n        };\n\n      case ActionTypes.COMPOSE_MENTION_CLOSE:\n        return {\n          ...state,\n          mentions: null\n        };\n\n      case ActionTypes.COMPOSE_CLEAN:\n        return {\n          ...state,\n          text: '',\n          commands: null,\n          mentions: null\n        };\n\n      case ActionTypes.DRAFT_LOAD:\n        return {\n          ...state,\n          text: DraftStore.getDraft()\n        };\n\n      case ActionTypes.EMOJI_INSERT:\n        const textBeforeEmoji = action.text.substring(0, action.caretPosition);\n        const textAfterEmoji = action.text.substring(action.caretPosition, action.text.length);\n\n        return {\n          ...state,\n          text: textBeforeEmoji + action.emoji + ' ' + textAfterEmoji\n        };\n\n      case ActionTypes.COMPOSE_PASTE:\n        return {\n          ...state,\n          text: action.text\n        };\n\n      case ActionTypes.COMPOSE_TOGGLE_AUTO_FOCUS:\n        return {\n          ...state,\n          autoFocus: action.isEnable\n        };\n\n      case ActionTypes.SEARCH_TOGGLE_FOCUS:\n        return {\n          ...state,\n          autoFocus: !action.isEnable\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new ComposeStore(Dispatcher);\n"]}